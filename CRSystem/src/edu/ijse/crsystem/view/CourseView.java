/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package edu.ijse.crsystem.view;

import edu.ijse.crsystem.dto.CourseDto;
import edu.ijse.crsystem.controller.CourseController;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rasuni
 */
public class CourseView extends javax.swing.JFrame {

    private CourseController courseController = new CourseController();
    private boolean viewOnly;
    
    public CourseView() {
        initComponents();
        loadTable();
    }
    
    public CourseView(boolean viewOnly) {
        this.viewOnly = viewOnly;
        initComponents();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblHeader = new javax.swing.JLabel();
        lblCourseId = new javax.swing.JLabel();
        txtCourseId = new javax.swing.JTextField();
        lblTitle = new javax.swing.JLabel();
        txtTitle = new javax.swing.JTextField();
        lblCreditHours = new javax.swing.JLabel();
        txtCreditHours = new javax.swing.JTextField();
        lblDepartment = new javax.swing.JLabel();
        txtDepartment = new javax.swing.JTextField();
        lblMaxCapacity = new javax.swing.JLabel();
        txtMaxCapacity = new javax.swing.JTextField();
        lblPrerequisites = new javax.swing.JLabel();
        txtPrerequisites = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCourse = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblHeader.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeader.setText("Course Registration Form");

        lblCourseId.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblCourseId.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCourseId.setText("CourseId:");

        lblTitle.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTitle.setText("Title:");

        lblCreditHours.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblCreditHours.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreditHours.setText("Credit Hours:");

        lblDepartment.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblDepartment.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDepartment.setText("Department:");

        lblMaxCapacity.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblMaxCapacity.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblMaxCapacity.setText("Max Capacity:");

        lblPrerequisites.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblPrerequisites.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPrerequisites.setText("Prerequisites:");

        btnSave.setBackground(new java.awt.Color(0, 153, 255));
        btnSave.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSave.setText("Save Course");
        btnSave.setOpaque(true);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(0, 204, 0));
        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnUpdate.setText("Update Course");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(255, 51, 0));
        btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDelete.setText("Delete Course");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        tblCourse.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblCourse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCourseMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCourse);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1))
            .addGroup(layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblPrerequisites, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtPrerequisites))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblMaxCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtMaxCapacity))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtDepartment))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCourseId, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtCourseId, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtTitle))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCreditHours, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtCreditHours, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(120, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSave)
                .addGap(18, 18, 18)
                .addComponent(btnUpdate)
                .addGap(18, 18, 18)
                .addComponent(btnDelete)
                .addGap(95, 95, 95))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCourseId)
                    .addComponent(txtCourseId, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTitle)
                    .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCreditHours)
                    .addComponent(txtCreditHours, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDepartment)
                    .addComponent(txtDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaxCapacity)
                    .addComponent(txtMaxCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrerequisites)
                    .addComponent(txtPrerequisites, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        deleteCourse();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
       saveCourse();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void tblCourseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCourseMouseClicked
        searchCourse();
    }//GEN-LAST:event_tblCourseMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        updateCourse();
    }//GEN-LAST:event_btnUpdateActionPerformed

    /**
     * @param args the command line arguments
     */
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCourseId;
    private javax.swing.JLabel lblCreditHours;
    private javax.swing.JLabel lblDepartment;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JLabel lblMaxCapacity;
    private javax.swing.JLabel lblPrerequisites;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblCourse;
    private javax.swing.JTextField txtCourseId;
    private javax.swing.JTextField txtCreditHours;
    private javax.swing.JTextField txtDepartment;
    private javax.swing.JTextField txtMaxCapacity;
    private javax.swing.JTextField txtPrerequisites;
    private javax.swing.JTextField txtTitle;
    // End of variables declaration//GEN-END:variables

    private void saveCourse(){
        CourseDto  courseDto = new CourseDto(
                txtCourseId.getText(),
                txtTitle.getText(),
                Integer.parseInt(txtCreditHours.getText()),
                txtDepartment.getText(),
                Integer.parseInt(txtMaxCapacity.getText()),
                txtPrerequisites.getText()
        );
        
        try {
            String resp = courseController.saveCourse(courseDto);
            JOptionPane.showMessageDialog(this, resp);
            loadTable();
            clearForm();
            
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e.getMessage());
            
        }
       
    }
    
    private void updateCourse(){
        CourseDto  courseDto = new CourseDto(
                txtCourseId.getText(),
                txtTitle.getText(),
                Integer.parseInt(txtCreditHours.getText()),
                txtDepartment.getText(),
                Integer.parseInt(txtMaxCapacity.getText()),
                txtPrerequisites.getText()
        );
        
        try {
            String resp = courseController.updateCourse(courseDto);
            JOptionPane.showMessageDialog(this, resp);
            loadTable();
            clearForm();
            
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e.getMessage());
            
        }
       
    }
        
     
        
    private void deleteCourse(){
        try {
            String resp = courseController.deleteCourse(txtCourseId.getText());
            JOptionPane.showMessageDialog(this, resp);
            loadTable();
            clearForm();
            
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e.getMessage());
            
        }
       
    }  
        
    
    
    
    public void loadTable(){
        try {
            String columns[] = {"Course Id", "Title", "Credit Hours", "Department", "Max Capacity", "Prerequisites"};
            DefaultTableModel dtm = new DefaultTableModel(columns, 0){
                public boolean isCellEditable(int row, int column){
                    return false;
                }
            };
            tblCourse.setModel(dtm);
            
            ArrayList<CourseDto> courseDtos = courseController.getAllCourse();
            for (CourseDto courseDto : courseDtos){
                Object[] rowData = {courseDto.getCourseId(), courseDto.getTitle(), courseDto.getCreditHours(), courseDto.getDepartment(), courseDto.getMaxCapacity(), courseDto.getPrerequisites()};
                dtm.addRow(rowData);
            }
            
        } catch (Exception e) {
             e.printStackTrace();
             JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }
    
    private void clearForm(){
        txtCourseId.setText("");
        txtTitle.setText("");
        txtCreditHours.setText("");
        txtDepartment.setText("");
        txtMaxCapacity.setText("");
        txtPrerequisites.setText("");
    }
    
    private void searchCourse(){
        String courseId = tblCourse.getValueAt(tblCourse.getSelectedRow(), 0).toString();
        try {
            CourseDto courseDto = courseController.searchCourse(courseId);
            if(courseDto != null){
                txtCourseId.setText(courseDto.getCourseId());
                txtTitle.setText(courseDto.getTitle());
                txtCreditHours.setText(Integer.toString(courseDto.getCreditHours()));
                txtDepartment.setText(courseDto.getDepartment());
                txtMaxCapacity.setText(Integer.toString(courseDto.getMaxCapacity()));
                txtPrerequisites.setText(courseDto.getPrerequisites());
            }else{
                JOptionPane.showMessageDialog(this, "Course not found.");
            }
        } catch (Exception e) {
            e.printStackTrace();
             JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }
}
